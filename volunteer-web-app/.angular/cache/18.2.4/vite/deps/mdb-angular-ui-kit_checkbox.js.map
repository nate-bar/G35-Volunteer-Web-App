{
  "version": 3,
  "sources": ["../../../../../node_modules/mdb-angular-ui-kit/fesm2022/mdb-angular-ui-kit-checkbox.mjs"],
  "sourcesContent": ["import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Directive, Input, Output, HostBinding, HostListener, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nconst MDB_CHECKBOX_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  // eslint-disable-next-line no-use-before-define, @typescript-eslint/no-use-before-define\n  useExisting: forwardRef(() => MdbCheckboxDirective),\n  multi: true\n};\nclass MdbCheckboxChange {\n  element;\n  checked;\n}\nclass MdbCheckboxDirective {\n  get checked() {\n    return this._checked;\n  }\n  set checked(value) {\n    this._checked = coerceBooleanProperty(value);\n  }\n  _checked = false;\n  get value() {\n    return this._value;\n  }\n  set value(value) {\n    this._value = value;\n  }\n  _value = null;\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  _disabled = false;\n  checkboxChange = new EventEmitter();\n  get isDisabled() {\n    return this._disabled;\n  }\n  get isChecked() {\n    return this._checked;\n  }\n  onCheckboxClick() {\n    this.toggle();\n  }\n  onBlur() {\n    this.onTouched();\n  }\n  constructor() {}\n  get changeEvent() {\n    const newChangeEvent = new MdbCheckboxChange();\n    newChangeEvent.element = this;\n    newChangeEvent.checked = this.checked;\n    return newChangeEvent;\n  }\n  toggle() {\n    if (this.disabled) {\n      return;\n    }\n    this._checked = !this._checked;\n    this.onChange(this.checked);\n    this.onCheckboxChange();\n  }\n  onCheckboxChange() {\n    this.checkboxChange.emit(this.changeEvent);\n  }\n  // Control Value Accessor Methods\n  onChange = _ => {};\n  onTouched = () => {};\n  writeValue(value) {\n    this.value = value;\n    this.checked = !!value;\n  }\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n  static ngAcceptInputType_checked;\n  static ngAcceptInputType_disabled;\n  static ɵfac = function MdbCheckboxDirective_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MdbCheckboxDirective)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MdbCheckboxDirective,\n    selectors: [[\"\", \"mdbCheckbox\", \"\"]],\n    hostVars: 2,\n    hostBindings: function MdbCheckboxDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function MdbCheckboxDirective_click_HostBindingHandler() {\n          return ctx.onCheckboxClick();\n        })(\"blur\", function MdbCheckboxDirective_blur_HostBindingHandler() {\n          return ctx.onBlur();\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"disabled\", ctx.isDisabled)(\"checked\", ctx.isChecked);\n      }\n    },\n    inputs: {\n      checked: \"checked\",\n      value: \"value\",\n      disabled: \"disabled\"\n    },\n    outputs: {\n      checkboxChange: \"checkboxChange\"\n    },\n    features: [i0.ɵɵProvidersFeature([MDB_CHECKBOX_VALUE_ACCESSOR])]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MdbCheckboxDirective, [{\n    type: Directive,\n    args: [{\n      // eslint-disable-next-line @angular-eslint/directive-selector\n      selector: '[mdbCheckbox]',\n      providers: [MDB_CHECKBOX_VALUE_ACCESSOR]\n    }]\n  }], () => [], {\n    checked: [{\n      type: Input,\n      args: ['checked']\n    }],\n    value: [{\n      type: Input,\n      args: ['value']\n    }],\n    disabled: [{\n      type: Input,\n      args: ['disabled']\n    }],\n    checkboxChange: [{\n      type: Output\n    }],\n    isDisabled: [{\n      type: HostBinding,\n      args: ['disabled']\n    }],\n    isChecked: [{\n      type: HostBinding,\n      args: ['checked']\n    }],\n    onCheckboxClick: [{\n      type: HostListener,\n      args: ['click']\n    }],\n    onBlur: [{\n      type: HostListener,\n      args: ['blur']\n    }]\n  });\n})();\nclass MdbCheckboxModule {\n  static ɵfac = function MdbCheckboxModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MdbCheckboxModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MdbCheckboxModule,\n    declarations: [MdbCheckboxDirective],\n    imports: [CommonModule, FormsModule],\n    exports: [MdbCheckboxDirective]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [CommonModule, FormsModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MdbCheckboxModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [MdbCheckboxDirective],\n      exports: [MdbCheckboxDirective],\n      imports: [CommonModule, FormsModule]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MDB_CHECKBOX_VALUE_ACCESSOR, MdbCheckboxChange, MdbCheckboxDirective, MdbCheckboxModule };\n"],
  "mappings": "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",
  "names": []
}
